{
  "Use Bevy prelude": {
    "prefix": "use bevy prelude",
    "body": "use bevy::prelude::*;"
  },
  "App Init": {
    "prefix": "app init",
    "body": [
      "use bevy::prelude::*;",
      "fn main() {",
      "\tApp::new()",
      "\t\t.add_plugins(DefaultPlugins)",
      "\t\t.run()"
    ]
  },
  "App 2D Init": {
    "prefix": "app2 init",
    "body": [
      "use bevy::prelude::*;",
      "fn main() {",
      "\tApp::new()",
      "\t\t.add_plugins(DefaultPlugins)",
      "\t\t.add_startup_system(setup_system)",
      "\t\t.run()",
      "}\n",
      "fn setup_system(mut commands: Commands) {",
      "\tcommands.spawn(Camera2dBundle::default());",
      "}"
    ]
  },
  "App 3D Init": {
    "prefix": "app3 init",
    "body": [
      "use bevy::prelude::*;\n",
      "fn main() {",
      "\tApp::new()",
      "\t\t.add_plugins(DefaultPlugins)",
      "\t\t.add_startup_system(setup_system)",
      "\t\t.run()",
      "}\n",
      "fn setup_system(mut commands: Commands) {",
      "\tcommands.spawn(Camera3dBundle::default());",
      "}"
    ]
  },
  "Component Struct": {
    "prefix": "component struct",
    "body": ["#[derive(Component)]", "struct ${1} {", "\t${0},", "}"]
  },
  "Component Enum": {
    "prefix": "component enum",
    "body": ["#[derive(Component)]", "enum ${1} {", "\t${0},", "}"]
  },
  "State Enum": {
    "prefix": "state enum",
    "body": [
      "#[derive(States, Default, Debug, Hash, PartialEq, Eq, Clone)]",
      "enum ${1} {",
      "\t#[default]",
      "\t${0},",
      "}"
    ]
  },
  "Plugin Init": {
    "prefix": "plugin init",
    "body": [
      "use bevy::prelude::*;\n",
      "pub struct ${1};\n",
      "impl Plugin for ${1} {",
      "\tfn build(&self, app: &mut App) {",
      "\t\t${0}",
      "\t}",
      "}"
    ]
  },
  "Mut Commands": {
    "prefix": "mut commands",
    "body": "mut commands: Commands"
  },
  "Res AssetServer": {
    "prefix": "res asset",
    "body": "${0}: Res<AssetServer>"
  },
  "Res TextureAtlas": {
    "prefix": "res texture atlas",
    "body": "mut ${0}: ResMut<Assets<TextureAtlas>>"
  },
  "Res State": {
    "prefix": "res state",
    "body": "${1}: Res<State<${0}>>"
  },
  "Res NextState": {
    "prefix": "res nextstate",
    "body": "mut ${1}: ResMut<NextState<{0}>>"
  },
  "Query": {
    "prefix": "query",
    "body": "Query<${1},${0}>"
  },
  "Query Only": {
    "prefix": "query only",
    "body": "Query<${0}>"
  },
  "Run in State": {
    "prefix": "run instate",
    "body": "run_if(in_state(${0}))"
  },
  "Event Reader": {
    "prefix": "event reader",
    "body": "mut ${1}: EventReader<${0}>,"
  },
  "Event Write": {
    "prefix": "event wirte",
    "body": "mut ${1}: EventWriter<${0}>"
  },
  "Event Handle": {
    "prefix": "event handle",
    "body": ["for ${0} in ${1}.iter() {\n", "}"]
  },
  "Add System": {
    "prefix": "add system",
    "body": [
      "fn ${2}(mut commands: Commands) {",
      "\tcommands.spawn((${1}, ${0}));",
      "}"
    ]
  },
  "Add System Insert": {
    "prefix": "add system insert",
    "body": [
      "fn ${1}(mut commands: Commands) {",
      "\tcommands",
      "\t\t.spawn()",
      "\t\t.insert(${System});",
      "}"
    ]
  }
}
